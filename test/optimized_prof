Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 43.77      2.77     2.77    22400     0.12     0.28  deflate_debreach
 24.33      4.31     1.54  8034900     0.00     0.00  longest_match_debreach
 15.33      5.28     0.97    12620     0.08     0.08  compress_block
  8.30      5.81     0.53    85220     0.01     0.01  fill_window
  3.79      6.05     0.24    19600     0.01     0.01  crc32_little
  2.05      6.18     0.13  2933680     0.00     0.00  pqdownheap.constprop.1
  0.47      6.21     0.03    37860     0.00     0.01  build_tree
  0.47      6.24     0.03    37860     0.00     0.00  gen_bitlen
  0.47      6.27     0.03    25240     0.00     0.00  scan_tree
  0.32      6.29     0.02   743620     0.00     0.00  pqdownheap
  0.16      6.30     0.01    37860     0.00     0.00  gen_codes
  0.16      6.31     0.01    25200     0.00     0.00  send_tree
  0.16      6.32     0.01     2800     0.00     0.00  detect_data_type
  0.08      6.32     0.01    19600     0.00     0.01  read_buf
  0.08      6.33     0.01     2801     0.00     0.00  deflateResetKeep
  0.08      6.33     0.01        1     5.00    10.00  deflateReset
  0.00      6.33     0.00  1504700     0.00     0.00  bi_reverse
  0.00      6.33     0.00    25201     0.00     0.00  crc32
  0.00      6.33     0.00    22400     0.00     0.28  debreach
  0.00      6.33     0.00    19600     0.00     0.28  gzwritet
  0.00      6.33     0.00    18220     0.00     0.00  _tr_flush_bits
  0.00      6.33     0.00    18220     0.00     0.00  bi_flush
  0.00      6.33     0.00    18220     0.00     0.00  flush_pending
  0.00      6.33     0.00    15421     0.00     0.00  init_block
  0.00      6.33     0.00    12620     0.00     0.10  _tr_flush_block
  0.00      6.33     0.00    12620     0.00     0.01  build_bl_tree
  0.00      6.33     0.00    12600     0.00     0.00  send_all_trees
  0.00      6.33     0.00     2801     0.00     0.00  _tr_init
  0.00      6.33     0.00     2801     0.00     0.00  lm_init
  0.00      6.33     0.00     2800     0.00     0.00  bi_windup
  0.00      6.33     0.00     2800     0.00     0.28  gzcloset
  0.00      6.33     0.00     2800     0.00     0.00  taint_brs
  0.00      6.33     0.00        7     0.00     0.00  myalloc
  0.00      6.33     0.00        1     0.00     0.00  deflateInit2_

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.16% of 6.33 seconds

index % time    self  children    called     name
                0.00    0.79    2800/22400       gzcloset [8]
                0.00    5.53   19600/22400       gzwritet [4]
[1]     99.8    0.00    6.32   22400         debreach [1]
                2.77    3.55   22400/22400       deflate_debreach [2]
                0.00    0.00    5600/18220       flush_pending [28]
                0.00    0.00    2800/25201       crc32 [26]
-----------------------------------------------
                2.77    3.55   22400/22400       debreach [1]
[2]     99.8    2.77    3.55   22400         deflate_debreach [2]
                1.54    0.00 8034900/8034900     longest_match_debreach [5]
                0.00    1.24   12620/12620       _tr_flush_block [6]
                0.53    0.25   85220/85220       fill_window [9]
                0.00    0.00   12620/18220       flush_pending [28]
                0.00    0.00    2800/2800        bi_windup [31]
-----------------------------------------------
                                                 <spontaneous>
[3]     99.8    0.00    6.32                 gz_compress [3]
                0.00    5.53   19600/19600       gzwritet [4]
                0.00    0.79    2800/2800        gzcloset [8]
                0.00    0.00    2800/2800        taint_brs [32]
-----------------------------------------------
                0.00    5.53   19600/19600       gz_compress [3]
[4]     87.4    0.00    5.53   19600         gzwritet [4]
                0.00    5.53   19600/22400       debreach [1]
-----------------------------------------------
                1.54    0.00 8034900/8034900     deflate_debreach [2]
[5]     24.3    1.54    0.00 8034900         longest_match_debreach [5]
-----------------------------------------------
                0.00    1.24   12620/12620       deflate_debreach [2]
[6]     19.6    0.00    1.24   12620         _tr_flush_block [6]
                0.97    0.00   12620/12620       compress_block [7]
                0.02    0.12   25240/37860       build_tree [12]
                0.00    0.10   12620/12620       build_bl_tree [14]
                0.01    0.00    2800/2800        detect_data_type [20]
                0.01    0.00   25240/37860       gen_codes [18]
                0.01    0.00   12600/25200       send_tree [19]
                0.00    0.01   12600/12600       send_all_trees [23]
                0.00    0.00   12620/15421       init_block [29]
-----------------------------------------------
                0.97    0.00   12620/12620       _tr_flush_block [6]
[7]     15.3    0.97    0.00   12620         compress_block [7]
-----------------------------------------------
                0.00    0.79    2800/2800        gz_compress [3]
[8]     12.5    0.00    0.79    2800         gzcloset [8]
                0.00    0.79    2800/22400       debreach [1]
-----------------------------------------------
                0.53    0.25   85220/85220       deflate_debreach [2]
[9]     12.2    0.53    0.25   85220         fill_window [9]
                0.01    0.24   19600/19600       read_buf [10]
-----------------------------------------------
                0.01    0.24   19600/19600       fill_window [9]
[10]     3.9    0.01    0.24   19600         read_buf [10]
                0.24    0.00   19600/19600       crc32_little [11]
                0.00    0.00   19600/25201       crc32 [26]
-----------------------------------------------
                0.24    0.00   19600/19600       read_buf [10]
[11]     3.8    0.24    0.00   19600         crc32_little [11]
-----------------------------------------------
                0.01    0.06   12620/37860       build_bl_tree [14]
                0.02    0.12   25240/37860       _tr_flush_block [6]
[12]     3.3    0.03    0.18   37860         build_tree [12]
                0.13    0.00 2933680/2933680     pqdownheap.constprop.1 [13]
                0.03    0.00   37860/37860       gen_bitlen [15]
                0.02    0.00  743620/743620      pqdownheap [17]
-----------------------------------------------
                0.13    0.00 2933680/2933680     build_tree [12]
[13]     2.1    0.13    0.00 2933680         pqdownheap.constprop.1 [13]
-----------------------------------------------
                0.00    0.10   12620/12620       _tr_flush_block [6]
[14]     1.6    0.00    0.10   12620         build_bl_tree [14]
                0.01    0.06   12620/37860       build_tree [12]
                0.03    0.00   25240/25240       scan_tree [16]
                0.00    0.00   12620/37860       gen_codes [18]
-----------------------------------------------
                0.03    0.00   37860/37860       build_tree [12]
[15]     0.5    0.03    0.00   37860         gen_bitlen [15]
-----------------------------------------------
                0.03    0.00   25240/25240       build_bl_tree [14]
[16]     0.5    0.03    0.00   25240         scan_tree [16]
-----------------------------------------------
                0.02    0.00  743620/743620      build_tree [12]
[17]     0.3    0.02    0.00  743620         pqdownheap [17]
-----------------------------------------------
                0.00    0.00   12620/37860       build_bl_tree [14]
                0.01    0.00   25240/37860       _tr_flush_block [6]
[18]     0.2    0.01    0.00   37860         gen_codes [18]
                0.00    0.00 1504700/1504700     bi_reverse [25]
-----------------------------------------------
                0.01    0.00   12600/25200       send_all_trees [23]
                0.01    0.00   12600/25200       _tr_flush_block [6]
[19]     0.2    0.01    0.00   25200         send_tree [19]
-----------------------------------------------
                0.01    0.00    2800/2800        _tr_flush_block [6]
[20]     0.2    0.01    0.00    2800         detect_data_type [20]
-----------------------------------------------
                0.01    0.01       1/1           gz_opent [22]
[21]     0.2    0.01    0.01       1         deflateReset [21]
                0.01    0.00    2801/2801        deflateResetKeep [24]
                0.00    0.00    2801/2801        lm_init [30]
-----------------------------------------------
                                                 <spontaneous>
[22]     0.2    0.00    0.01                 gz_opent [22]
                0.01    0.01       1/1           deflateReset [21]
                0.00    0.00       1/1           deflateInit2_ [34]
-----------------------------------------------
                0.00    0.01   12600/12600       _tr_flush_block [6]
[23]     0.1    0.00    0.01   12600         send_all_trees [23]
                0.01    0.00   12600/25200       send_tree [19]
-----------------------------------------------
                0.01    0.00    2801/2801        deflateReset [21]
[24]     0.1    0.01    0.00    2801         deflateResetKeep [24]
                0.00    0.00    2801/15421       init_block [29]
                0.00    0.00    2801/2801        _tr_init [103]
                0.00    0.00    2801/25201       crc32 [26]
-----------------------------------------------
                0.00    0.00 1504700/1504700     gen_codes [18]
[25]     0.0    0.00    0.00 1504700         bi_reverse [25]
-----------------------------------------------
                0.00    0.00    2800/25201       debreach [1]
                0.00    0.00    2801/25201       deflateResetKeep [24]
                0.00    0.00   19600/25201       read_buf [10]
[26]     0.0    0.00    0.00   25201         crc32 [26]
-----------------------------------------------
                0.00    0.00   18220/18220       flush_pending [28]
[27]     0.0    0.00    0.00   18220         bi_flush [27]
-----------------------------------------------
                0.00    0.00    5600/18220       debreach [1]
                0.00    0.00   12620/18220       deflate_debreach [2]
[28]     0.0    0.00    0.00   18220         flush_pending [28]
                0.00    0.00   18220/18220       bi_flush [27]
                0.00    0.00   18220/18220       _tr_flush_bits [102]
-----------------------------------------------
                0.00    0.00    2801/15421       deflateResetKeep [24]
                0.00    0.00   12620/15421       _tr_flush_block [6]
[29]     0.0    0.00    0.00   15421         init_block [29]
-----------------------------------------------
                0.00    0.00    2801/2801        deflateReset [21]
[30]     0.0    0.00    0.00    2801         lm_init [30]
-----------------------------------------------
                0.00    0.00    2800/2800        deflate_debreach [2]
[31]     0.0    0.00    0.00    2800         bi_windup [31]
-----------------------------------------------
                0.00    0.00    2800/2800        gz_compress [3]
[32]     0.0    0.00    0.00    2800         taint_brs [32]
-----------------------------------------------
                0.00    0.00       7/7           deflateInit2_ [34]
[33]     0.0    0.00    0.00       7         myalloc [33]
-----------------------------------------------
                0.00    0.00       1/1           gz_opent [22]
[34]     0.0    0.00    0.00       1         deflateInit2_ [34]
                0.00    0.00       7/7           myalloc [33]
-----------------------------------------------
                0.00    0.00   18220/18220       flush_pending [28]
[102]    0.0    0.00    0.00   18220         _tr_flush_bits [102]
-----------------------------------------------
                0.00    0.00    2801/2801        deflateResetKeep [24]
[103]    0.0    0.00    0.00    2801         _tr_init [103]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [102] _tr_flush_bits         [34] deflateInit2_          [30] lm_init
   [6] _tr_flush_block        [21] deflateReset            [5] longest_match_debreach
 [103] _tr_init               [24] deflateResetKeep       [33] myalloc
  [27] bi_flush                [2] deflate_debreach       [17] pqdownheap
  [25] bi_reverse             [20] detect_data_type       [13] pqdownheap.constprop.1
  [31] bi_windup               [9] fill_window            [10] read_buf
  [14] build_bl_tree          [28] flush_pending          [16] scan_tree
  [12] build_tree             [15] gen_bitlen             [23] send_all_trees
   [7] compress_block         [18] gen_codes              [19] send_tree
  [26] crc32                   [8] gzcloset               [32] taint_brs
  [11] crc32_little            [4] gzwritet
   [1] debreach               [29] init_block
