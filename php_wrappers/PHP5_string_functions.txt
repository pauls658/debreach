DEFINITELY NO HANDLER NEEDED
================
addslashes() 			places slashes in front of ' " \ NUL
localeconv() 			gets info about current locale
str_repeat() 			Repeats a string a specified number of times
strip_tags() 			Strips HTML and PHP tags from a string
stripcslashes() 		Unquotes a string quoted with addcslashes()
stripslashes() 			Unquotes a string quoted with addslashes()
chr() 					Returns a character from a specified ASCII value
html_entity_decode() 	Converts HTML entities to characters
htmlentities() 			Converts characters to HTML entities
htmlspecialchars_decode() 	Converts some predefined HTML entities to characters
htmlspecialchars() 		Converts some predefined characters to HTML entities
print() 	Outputs one or more strings

PROBABLY NOT NEEDED
================
nl2br()					inserts <br> inserted before '\r\n' '\n\r' '\n' and '\r' - probably not needed marker unlikely to appear between \r and \n
hebrev() 				Converts Hebrew text to visual text
hebrevc() 				Converts Hebrew text to visual text and new lines (\n) into <br>

TODO
================
addcslashes() 			Returns a string with backslashes in front of the specified characters
str_ireplace() 			Replaces some characters in a string (case-insensitive)
str_pad() 				Pads a string to a new length - only need to subtract length of markers
**str_replace() 		Replaces some characters in a string (case-sensitive)
substr_count() 			Counts the number of times a substring occurs in a string - need to make sure marker doesn't break needle, offset and length need to account for markers.
**substr_replace() 		Replaces a part of a string with another string - $start needs to account for markers, so does $length
bin2hex() 				Converts a string of ASCII characters to hexadecimal values
hex2bin() 				Converts a string of hexadecimal values to ASCII characters
count_chars() 			Returns information about characters used in a string
strcasecmp() 			Compares two strings (case-insensitive)
strstr() 				Finds the first occurrence of a string inside another string (case-sensitive)
strchr() 				Finds the first occurrence of a string inside another string (alias of strstr())
strcmp() 				Compares two strings (case-sensitive)
strcoll() 				Compares two strings (locale based string comparison)
strcspn() 				Returns the number of characters found in a string before any part of some specified characters are found
stripos() 				Returns the position of the first occurrence of a string inside another string (case-insensitive)
stristr() 				Finds the first occurrence of a string inside another string (case-insensitive)
strnatcasecmp() 		Compares two strings using a "natural order" algorithm (case-insensitive)
strnatcmp() 			Compares two strings using a "natural order" algorithm (case-sensitive)
strncasecmp() 			String comparison of the first n characters (case-insensitive)
strncmp() 				String comparison of the first n characters (case-sensitive)
strpbrk() 				Searches a string for any of a set of characters
strpos() 				Returns the position of the first occurrence of a string inside another string (case-sensitive)
strrchr() 				Finds the last occurrence of a string inside another string
strripos() 				Finds the position of the last occurrence of a string inside another string (case-insensitive)
strrpos() 				Finds the position of the last occurrence of a string inside another string (case-sensitive)
strtolower() 			Converts a string to lowercase letters
strtoupper() 			Converts a string to uppercase letters
substr() 				Returns a part of a string
strspn() 				Returns the number of characters found in a string that contains only characters from a specified charlist
strtok() 				Splits a string into smaller strings
strtr() 				Translates certain characters in a string
substr_compare() 		Compares two strings from a specified start position (binary safe and optionally case-sensitive)
chunk_split() 			Splits a string into a series of smaller parts
implode() 				Returns a string from the elements of an array
join() 					Alias of implode()

chop() 					Removes whitespace or other characters from the right end of a string
lcfirst() 				Converts the first character of a string to lowercase
ltrim() 				Removes whitespace or other characters from the left side of a string
trim() 					Removes whitespace or other characters from both sides of a string

TODO but probably won't appear
===============
levenshtein() 			Returns the Levenshtein distance between two strings
metaphone() 			Calculates the metaphone key of a string
money_format() 			Returns a string formatted as a currency string
number_format() 		Formats a number with grouped thousands
str_word_count() 		Count the number of words in a string
ord() 					Returns the ASCII value of the first character of a string


DONE
===============
explode() 				Breaks a string into an array
strlen() 				Returns the length of a string
rtrim() 				Removes whitespace or other characters from the right side of a string


HAVEN'T CONSIDERED YET
================
convert_uudecode() 	Decodes a uuencoded string
convert_uuencode() 	Encodes a string using the uuencode algorithm
crc32() 	Calculates a 32-bit CRC for a string
crypt() 	One-way string hashing
md5() 		Calculates the MD5 hash of a string
md5_file() 	Calculates the MD5 hash of a file
quoted_printable_decode() 	Converts a quoted-printable string to an 8-bit string
quoted_printable_encode() 	Converts an 8-bit string to a quoted printable string
sha1() 		Calculates the SHA-1 hash of a string
sha1_file() 	Calculates the SHA-1 hash of a file
str_rot13() 	Performs the ROT13 encoding on a string
fprintf() 	Writes a formatted string to a specified output stream
get_html_translation_table() 	Returns the translation table used by htmlspecialchars() and htmlentities()
parse_str() 	Parses a query string into variables
printf() 	Outputs a formatted string
quotemeta() 	Quotes meta characters
similar_text() 	Calculates the similarity between two strings
soundex() 	Calculates the soundex key of a string
sprintf() 	Writes a formatted string to a variable
sscanf() 	Parses input from a string according to a format
str_getcsv() 	Parses a CSV string into an array
str_shuffle() 	Randomly shuffles all characters in a string
str_split() 	Splits a string into an array
strrev() 	Reverses a string
ucfirst() 	Converts the first character of a string to uppercase
ucwords() 	Converts the first character of each word in a string to uppercase
vfprintf() 	Writes a formatted string to a specified output stream
vprintf() 	Outputs a formatted string
vsprintf() 	Writes a formatted string to a variable
wordwrap() 	Wraps a string to a given number of characters
